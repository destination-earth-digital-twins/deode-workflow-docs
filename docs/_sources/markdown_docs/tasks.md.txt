# Available tasks

## Preparation of static files
This section contains tasks that are done only once during a model run. In case the static files already exists the tasks can be deactivated in the suite setting `config.suite_control.create_static_data` to `False`. The location of the background input data used is defined in `config.platform` and the resulting output files are stored in a directory defined by `config.system.climdir`.

### Surfex
 * {class}`deode.tasks.gmtedsoil.Gmted` prepares topograhpic data from gmted input data. 
 * {class}`deode.tasks.gmtedsoil.Soil` prepares soil data input for PGD using SOILGRID.

 * {class}`deode.tasks.sfx.Pgd` runs PGD using ECOCLIMAP SG for either a single 10 day period or the full year. Check `config.pgd` for PGD configuration options and use `deode show namelist [--config-file your_config.toml] -t surfex -n pgd` to print the used namelist.
 * {class}`deode.tasks.e923.PgdUpdate` updates the topography in the Const.Clim.sfx file with the one filtered/truncated in E923Constant.

### E923
These task handles the generation of the non-SURFEX related static data required by the model. Type `deode show namelist -t master -n show` to show the available namelists used in e923.

 * {class}`deode.tasks.e923.E923Constant` generates the constant part of the e923 files.
 * {class}`deode.tasks.e923.E923Monthly` generates the monthly part of the e923 files.
 * {class}`deode.tasks.e923_update.E923Update`: In case of CSC=ALARO selected physiography fields are taken from the initial surfex files and written back to the e923 used. This is only performed once. Read more about the task [here](#e923-update).

## Input data 
 * {class}`deode.tasks.marsprep.Marsprep` extracts IFS data from MARS if the expected data is not found on disk. The location of the data on disk is by default outside of a specific case so the input data can easily be reused for several runs. Implemented data sources are described in [config.mars](#mars)
 * {class}`deode.tasks.sfx.Prep` creates the initial state file for SURFEX using PREP. Input data can be either IFS or AROME/HARMONIE-AROME data. The namelist used for Prep can be generated by `deode show namelist [--config-file your_config.toml] -t surfex -n prep`

 * {class}`deode.tasks.c903.C903` creates an initial atmospheric state and boundary files from a global ECMWF file. Use `deode show namelist [--config-file your_config.toml] -t master -n c903_[main|domain]` to see the two namelists required.
 * {class}`deode.tasks.e927.E927` creates an initial atmospheric state and boundary files from a AROME/HARMONIE-AROME file. Use `deode show namelist [--config-file your_config.toml] -t master -n e927` to see the namelist used.

## Forecasting
 * {class}`deode.tasks.forecast.Forecast` runs the forecast for any of the three CSCs. Namelists can be extracted with `deode show namelist [--config-file your_config.yoml] -t master -n forecast` for the upper air namelist and with `-t surfex -n forecast` for the surfex part.

## Postprocessing
 * {class}`deode.tasks.creategrib.CreateGrib` converts FA files to GRIB files. Configured to only work with output from SURFEX producing GRIB1 files.

 * {class}`deode.tasks.extractsqlite.ExtractSQLite` extracts data for point verification with harp. Options defined in [config.extractsqlite](#property-config-extractsqlite) and in the parameter lists under `deode/data/sqlite`

## Archiving
All non temporary files produced by the Deode-Workflow are stored in a directory defined by `config.system.archive` usually defined as `SOME_PATH/YOUR_EXP/archive/YYYY/MM/DD/HH`. Depending on your system these file may be left there for further usage or sent to a more permanent storage. Currently support is implemented or on the way to be implemented for the following
 * ecfs: Archiving on ECMWF ECFS tape system, either under `ec` or `ectmp`.
 * fdb: Archiving in FDB for further internal usage or for propagation to the data bridge (in case of operataions). This is still under development.
 * scp: Send files to an arbitrary remote host using scp. The location and access details are configured under `config.archiving.scp`.

For archiving we have the following two tasks
 * {class}`deode.tasks.archive.ArchiveStatic` archives the output from the Pgd and E923 tasks. Configured under `config.archiving.ecfs.static`.
 * {class}`deode.tasks.archive.ArchiveHour` archives output from each cycle. Configured under `config.archiving.ecfs`.

## Cleaning
These tasks takes care of temporary files and directories or files that has been archived as described above. The rules for the cleaning tasks described below are defined in `config.cleaning.TASK`. Read more about the cleaning [here](#cleaning-of-experiment).

 * {class}`deode.tasks.cleaning_tasks.PreCleaning` prepares the run by removing old ecflow output and job files.
 * {class}`deode.tasks.cleaning_tasks.CycleCleaning` runs after each cycle and removes old directories and files with some delay as defined in the configuration.
 * {class}`deode.tasks.cleaning_tasks.PostMortem` runs at the very end of the suite and could potentially remove all obsolete ecflow output files.

